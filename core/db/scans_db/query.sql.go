// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package scans_db

import (
	"context"
)

const count = `-- name: Count :one
SELECT COUNT(*) FROM scans
`

func (q *Queries) Count(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, count)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const getScans = `-- name: GetScans :one
SELECT id, type, start_time, end_time FROM scans
WHERE id = ? LIMIT 1
`

func (q *Queries) GetScans(ctx context.Context, id int64) (Scan, error) {
	row := q.db.QueryRowContext(ctx, getScans, id)
	var i Scan
	err := row.Scan(
		&i.ID,
		&i.Type,
		&i.StartTime,
		&i.EndTime,
	)
	return i, err
}
